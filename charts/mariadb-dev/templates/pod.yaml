---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-pod{{- if .Values.generateName }}-{{ randAlphaNum 5 | nospace | lower }}{{- end }}"
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- range $key, $value := .Values.labels }}
    {{- printf "%s: \"%v\"\n" $key $value | nindent 8 }}
    {{- end }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: mariadb-dev
  annotations:
    {{- range $key, $value := .Values.annotations }}
    {{- printf "%s: \"%v\"\n" $key $value | nindent 8 }}
    {{- end }}
    # Trigger restart on file changes
    checksum.templates.env-secret.yaml: {{ include (print $.Template.BasePath "/env-secret.yaml") . | sha256sum }}
    checksum.templates.cm.yaml: {{ include (print $.Template.BasePath "/cm.yaml") . | sha256sum }}
    # Force recreate the pod on upgrade
    checksum.force.recreate: "{{- if .Values.forceRecreate }}{{ randAlphaNum 10 }}{{- end }}"
spec:
  initContainers:
    - name: volume-permissions
      image: bitnami/os-shell:11
      command:
        - /bin/bash
      args:
        - -ec
        - |
          mkdir -p /bitnami/mariadb
          # Suppress errors (Supports MacOS which uses 501:dialout)
          chown --silent -R 1001:1001 /bitnami/mariadb >/dev/null 2>&1 || :
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: {{ .Release.Name }}-pv
          mountPath: "/bitnami/mariadb"
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
  containers:
    - name: mariadb
      image: "bitnami/mariadb:11.4"
      envFrom:
        - secretRef:
            name: {{ .Release.Name }}-env-secret
      {{- if .Values.container.resources }}
      resources: {{ toYaml .Values.container.resources | nindent 12 }}
      {{- end }}
      ports:
        - name: https
          containerPort: 3306
      {{- if .Values.container.startupProbe.enabled }}
      startupProbe: {{- omit .Values.container.startupProbe "enabled" | toYaml | nindent 8 }}
        exec:
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
      {{- end }}
      {{- if .Values.container.livenessProbe.enabled }}
      livenessProbe: {{- omit .Values.container.livenessProbe "enabled" | toYaml | nindent 8 }}
        exec:
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
      {{- end }}
      {{- if .Values.container.livenessProbe.enabled }}
      readinessProbe: {{- omit .Values.container.readinessProbe "enabled" | toYaml | nindent 8 }}
        exec:
          command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
      {{- end }}
      volumeMounts:
        - name: {{ .Release.Name }}-pv
          mountPath: "/bitnami/mariadb"
          {{- if .Values.persistence.subPath }}
          subPath: {{ .Values.persistence.subPath }}
          {{- end }}
        - name: {{ .Release.Name }}-configuration
          mountPath: "/opt/bitnami/mariadb/conf/my.cnf"
          subPath: my.cnf
  volumes:
    - name: {{ .Release.Name }}-pv
      {{- if and .Values.persistence.enabled .Values.persistence.local.enabled }}
      hostPath:
        path: {{ .Values.persistence.local.path }}
        type: DirectoryOrCreate
      {{- else if and .Values.persistence.enabled (not .Values.persistence.local.enabled) }}
      persistentVolumeClaim:
        claimName: {{ .Release.Name }}-pvc
      {{- else }}
      emptyDir: {}
      {{- end }}
    - name: {{ .Release.Name }}-configuration
      configMap:
        name: {{ .Release.Name }}-cm
        items:
          - key: my.cnf
            path: my.cnf
